id: /soml/hbsko-remodel-search   # id for the schema, should start with '/soml/'
label: The HBSKO remodeling project by Amy and Dennis       # label for the schema
creator: Dennis Kavlakoglu    # creator for the schema
created: 2024-08-12    # date the schema is created
updated: 2024-08-20    # date the schema is updated
versionInfo: 0.1 # version of the schema
config:
# optional section with configurations used by the Platform
#  enable_mutations: true
#  lang: {fetch: "en", validate: "UNIQ", implicit: "en", defaultNameFetch: "ANY", appendDefaultNameFetch: true} # or lang: "en"
#  queryPfx: ""
#  mutationPfx: ""
#  repository: ""
#  includeInferred: true
#  expandOwlSameAs: true
#  exposeSomlInGraphQL: false
#  defaultRole: "Default"
#  defaultIntegrationRole: "Federation_SystemRole"
#  disabledChecks: []
  search:
    analysis:
      analyzer: standard # other options: keyword, stop, simple, whitespace, pattern, <language>, fingerprint (https://www.elastic.co/guide/en/elasticsearch/reference/8.13/analysis-analyzers.html)
    lang: # set language
      en:
        analyzer: english
types:
# optional section with configurations used by the Platform
#  # Enumeration datatypes
#  statusEnum: {values: [Current, Emeriti]}
#  affiliationEnum: {values: [Primary, Secondary]}
prefixes:
# define prefixes for this schema domain
  # common prefixes
  onto:  http://www.ontotext.com/
  so:    http://www.ontotext.com/semantic-object/
  res:   http://www.ontotext.com/semantic-object/result/
  dc:    http://purl.org/dc/elements/1.1/
  dcterms:   http://purl.org/dc/terms/
  dcmitype: http://purl.org/dc/dcmitype/
  afn: http://jena.apache.org/ARQ/function#
  agg: http://jena.apache.org/ARQ/function/aggregate#
  apf: http://jena.apache.org/ARQ/property#
  array: http://www.w3.org/2005/xpath-functions/array
  fn: http://www.w3.org/2005/xpath-functions
  geoext: http://rdf.useekm.com/ext#
  geof: http://www.opengis.net/def/function/geosparql/
  gn: http://www.geonames.org/ontology#
  graphdb: http://www.ontotext.com/config/graphdb#
  list: http://jena.apache.org/ARQ/list#
  map: http://www.w3.org/2005/xpath-functions/map
  math: http://www.w3.org/2005/xpath-functions/math
  ofn: http://www.ontotext.com/sparql/functions/
  omgeo: http://www.ontotext.com/owlim/geo#
  owl: http://www.w3.org/2002/07/owl#
  path: http://www.ontotext.com/path#
  rank: http://www.ontotext.com/owlim/RDFRank#
  puml:  http://plantuml.com/ontology#
  rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns#
  rdf4j: http://rdf4j.org/schema/rdf4j#
  rdfs: http://www.w3.org/2000/01/rdf-schema#
  rep: http://www.openrdf.org/config/repository#
  sail: http://www.openrdf.org/config/sail#
  sesame: http://www.openrdf.org/schema/sesame#
  skos:  http://www.w3.org/2004/02/skos/core#
  spif: http://spinrdf.org/spif#
  sr: http://www.openrdf.org/config/repository/sail#
  void:  http://rdfs.org/ns/void#
  wgs84: http://www.w3.org/2003/01/geo/wgs84_pos#
  xsd:   http://www.w3.org/2001/XMLSchema#
  schema: http://schema.org/
  dbpedia: http://dbpedia.org/resource/
  foaf: http://xmlns.com/foaf/0.1/

specialPrefixes:
  # base IRI for data (resources)
  base_iri: https://librarydata.hbs.edu/HBSKOntology/
  # default namespace for vocabulary (ontology) terms
  vocab_iri: https://librarydata.hbs.edu/HBSKOntology/
  # prefix corresponding to the vocab IRI
  vocab_prefix: hbsko
#  ontology_iri: https://librarydata.hbs.edu/HBSK/ontology
#  shape_iri:    https://librarydata.hbs.edu/HBSK/shacl
#  shape_prefix: hbsko-sh

properties:
# Property Definition Template
#  <prop>:  {label: "...", descr: "...", range: <datatype|Obj>, rangeCheck: <boolean>, typeCast: <boolean>,
#            kind: (object | literal | mixed), min: <default 0>, max: <default 1>,
#            inverseAlias: <prop>, inverse: <prop>, rdfProp: "(pfx:prop | <absoluteIRI> | SPARQL template)", symmetric: <boolean>, regex: '<regex>', prefix: "<string>"}
################################
# define global property definitions
  description:
    search:
      index: true
    max: inf
    range: stringOrLangString

  displayName:
    search:
      index: true
    max: inf
    range: stringOrLangString

  source:
    search:
      index: true
    max: inf
    range: stringOrLangString

  nakedId:
    search:
      index: true

  sortString:
    search:
      index: true
    max: inf
    range: stringOrLangString

  prefName:
    search:
      index: true
    rdfProp: "?_subject hbsko:displayName|skos:prefLabel|rdfs:label|skos:altLabel ?_value"

objects:
# Object Class Definition Template
#  <Obj>:
#    label: "...",
#    descr: "...",
#    regex: '<regex>',
#    regexFlags: '<flags>',
#    prefix: "<string>",
#    typeProp: (<prop> | "none"),
#    type: [<iri>...],
#    name: <prop>,
#    inherits: <Obj>,
#    kind: (abstract|supertype),
#    access: (read|read-only),
#    sparqlFederatedService: "<string>",
#    search: '<boolean> or <config>',
#    pattern: "<string>",
#    extend: <boolean>,
#    meta: {key: "<string>", value: '<string>|<json>'}
#    props:
#      <prop>: ...
####################################################
# define objects and their properties
#  ConceptScheme:
#    name: skos:prefLabel
#    type:
#      - skos:ConceptScheme
#
#  Concept:
#    name: skos:prefLabel
#    type:
#      - skos:Concept
#    props:
#      skos:inScheme:
#        range: ConceptScheme

  Event:
#    prefix: "event/"
#    type:
#      - hbsko:Event
#      - dcmitype:Event
#      - schema:Event
    kind: abstract
    search:
      index: true
    props:
      description: { }
      displayName: { }
      source: { }
      nakedId: { }
      sortString: { }
      involvesPerson: {range: Person, search: { index: true } }
      startDate: { search: { index: true }, range: date }
      endDate: { search: { index: true }, range: date }
      startYear: { search: { index: false }, range: year }
      endYear: { search: { index: false }, range: year }
      involvesUnit: { max: inf, range: AcademicUnit, search: { index: true } }

  PersonFieldEvent:
    #    name: skos:prefLabel
    search:
      nested: true
    inherits: Event
    props:
      involvesFieldOfStudy: {search: {index: true}, max: inf, range: FieldOfStudy }

  PersonTitleEvent:
    #    name: skos:prefLabel
    search:
      nested: true
    inherits: Event
    props:
      involvesRank: {search: {index: true}, max: inf, range: FacultyRank }
      involvesTitle: { max: inf, range: FacultyTitle, search: { index: true } }

  PersonUnitEvent:
    #    name: skos:prefLabel
    search:
      nested: true
    inherits: Event
    props:
      involvesUnit: {}
      unitAffiliationType: { max: inf, range: stringOrLangString, search: { index: true } }

  Person:
    name: skos:prefLabel
#    prefix: "person/"
    kind: abstract
#    type:
#      - hbsko:Person
#      - foaf:Person
#      - schema:Person
    search:
      index: true
    props:
      description: {}
      displayName: {}
      source: {}
      nakedId: {}
      sortString: {}
      memberOf: { search: { index: true }, range: Organization}
      firstName: { search: { index: true }, max: inf, range: stringOrLangString}
      middleName: { search: { index: true }, max: inf, range: stringOrLangString}
      lastName: { search: { index: true }, max: inf, range: stringOrLangString}
      suffix: { search: { index: true }, max: inf, range: stringOrLangString}
      interestTopic: { search: { index: true }, max: inf, range: stringOrLangString }
      position: { search: { index: true }, max: inf, range: stringOrLangString }
      profileUrl: { search: { index: true }, prefix: "https://www.hbs.edu/faculty/Pages/profile.aspx?facId=" }
      facultyStatus: { search: { index: true }, range: stringOrLangString }

  HBSFaculty:
    name: skos:prefLabel
#    type:
#      - hbsko:HBSFaculty
    inherits: Person
    search:
      nested: true
    props:
      interestTopic: { search: { index: true }, max: inf, range: stringOrLangString}
      position: { search: { index: true }, max: inf, range: stringOrLangString}
      profileUrl: { search: { index: true }, prefix: "https://www.hbs.edu/faculty/Pages/profile.aspx?facId=" }
      facultyStatus: { search: { index: true }, range: stringOrLangString}

  Organization:
    name: skos:prefLabel
#    prefix: "organization/"
    kind: abstract
#    type:
#      - hbsko:Organization
#      - schema:Organization
    search:
      index: true
    props:
      description: { }
      displayName: { }
      source: { }
      nakedId: { }
      sortString: { }
      hasMember: { max: inf, range: Person, inverseAlias: memberOf, search: { index: true } }

  AcademicUnit:
    name: skos:prefLabel
#    type:
#      - hbsko:AcademicUnit
    inherits: Organization
    search:
      nested: true
    props:
      description: { }
      displayName: { }
      source: { }
      nakedId: { }
      sortString: { }
      hasMember: { max: inf, range: Person, inverseAlias: memberOf, search: { index: true } }

  FacultyRank:
    name: skos:prefLabel

  FacultyTitle:
    name: skos:prefLabel
    search:
      index: true

  FieldOfStudy:
    name: skos:prefLabel
    search:
      index: true

rbac:
  # define role based access control to objects and properties
  roles:
    # Role Definition Template
    #    <Role>:
    #      description: "..."
    #      actions: [
    #        "(<Obj>|*)/(<prop> | *)/(<read> | <write> | <delete> | *)/(where:{<graphqlFilter>})?"
    #      ]
    #      notActions: [
    #        "(<Obj>|*)/(<prop> | *)/(<read> | <write> | <delete> | *)/(where:{<graphqlFilter>})?"
    #      ]
    # Default role which does not need to be configured or declared. Included for completeness.
    Default:
      description: "Default role, which does not need to be declared restricts all access read, write and delete"
      notActions: [
        "*/*/*"
      ]
    # Example role definitions which needs to be declared by the user:
    Admin:
      description: "Administrator role, can read, write and delete objects"
      actions: [
        "*/*/*"
      ]
    ReadOnly:
      description: "User which can read all Objects and properties"
      actions: [
        "*/*/read"
      ]